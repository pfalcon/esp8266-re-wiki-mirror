'''flashchip''' is an internal data structure apparently used for keeping various information about the particular SPI flash chip connected to the ESP8266.  It appears to be only used from within libmain.a

= Location =

'''flashchip''' is declared in libmain/spi_flash.o at .data+0x0

= Description =

{| class="wikitable"
! Offset !! Length !! Datatype !! Name !! Default Value !! Notes
|-
| 0 || 4 || uint32 || device_id || 0x001640ef ||
|-
| 4 || 4 || uint32 || chip_size || 0x00400000 (4 MB) || Set on startup (in [[user_start (IoT RTOS SDK 0.9.9)|user_start]]) based on value in flash header
|-
| 8 || 4 || uint32 || block_size || 0x00010000 (64 KB) ||
|-
| 12 || 4 || uint32 || sector_size || 0x00001000 (4 KB) ||
|-
| 16 || 4 || uint32 || page_size || 0x00000100 (256 B) ||
|-
| 20 || 4 || uint32 || status_mask || 0x0000ffff ||
|}

Note that aside from chip_size, none of the other fields of this structure ever appear to be set by anything (the defaults are always used)

= Sources =

A struct definition apparently corresponding to flashchip can be found in spi_flash.h in recent versions of the (non-RTOS) IoT SDK, despite the fact that '''flashchip''' itself is never declared in any of the headers (and is presumed to be intended to not be part of the published API).

Although the 0.9.9 RTOS SDK does not have this struct definition in its spi_flash.h, the declaration in spi_flash.o does appear to have a matching size and layout, and thus is assumed to match, thus the same field names have been used here.

ESP8266 has two asynchronous serial UARTs (UART0 & UART1). They have default TX, RX output pins as well as flow control pins, plus the pins can be remapped to an "alternate" set of pins via the IOMUX registers.

UART0 is used by the BootROM serial bootloader, and for outputting BootROM status information. It is also the default UART for Espressif SDK printf(), getchar(), etc.

=Baud Rate Setting=

Baud rate on both UARTs is divided from "APB"[https://github.com/espressif/esp_iot_rtos_sdk/blob/master/include/espressif/esp8266/eagle_soc.h#L58] peripheral clock.

The nominal default baud rate for ESP8266 is 74880bps (the actual baud rates appear to be 74927bps & 74906bps.)

=== Baud rates during normal program reset ===

* Device resets with APB frequency = double crystal frequency, and UART divider = 694
**  So 40MHz XTAL = 80MHz APB & 115273bps UART
**  Or 26MHz XTAL = 52MHz APB & 74927bps UART
**  Or 24MHz XTAL = 48MHz APB & 69164bps UART
**  (Some early versions of datasheet suggest any crystal in range 20-52MHz is supported, later edition hardware manual suggests these 3 discrete values only[[http://www.esp8266.com/viewtopic.php?p=18544#p18544]].)
* Most of the bootloader activity (running from ROM, setting up hardware and loading sections from flash) happens at this APB frequency & UART speed.
* Towards end, BootROM bootloader loads crystal frequency from flash config sector[[http://bbs.espressif.com/viewtopic.php?t=831]] and sets PLL for an 80MHz APB frequency
* BootROM calls into user entry point loaded from flash.
* BootROM bootloader hasn't changed UART divider from 694 (meaning brief period of guaranteed ~115273bps regardless of crystal), but default SDK behaviour changes it to 1068 during early execution (guaranteed ~74906bps regardless of crystal).

Open questions:
* How does the PLL work?
* What are the actual exact PLL multiplier values?
* Are the APB frequency and the CPU frequency the same?
* How does this interact with the register known to "double CPU frequency"?

=== Baud rates used for serial flashing ===

The serial flashing BootROM "program" allows flash and memory access via the UART. It supports the UART auto-baud feature so the uploading tool can configure any baud rate it likes (1Mbps upload rate is possible with the right hardware).

When the program is done it sends a "flash finish" command which optionally "reboots" and starts the default "normal" BootROM bootloader. This "reboot" process doesn't reset the UART divider, so the bootloader keeps whatever UART divider and baud rate was set earlier, instead of defaulting to 694.

The serial bootloader appears to run at the same default 2xXTAL APB clock, same as post-reset BootROM bootloader - so for 24MHz & 26MHz crystals it will also change the PLL (and therefore the baud rate) just before it hands off to user code.
